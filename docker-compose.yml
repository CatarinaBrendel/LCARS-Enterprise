services:
  db:
    image: postgres:16
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
      POSTGRES_DB: appdb
    ports: ["5432:5432"]
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app -d appdb"]
      interval: 5s
      timeout: 5s
      retries: 20

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: dev
    env_file:
      - .env
    environment:
      DATABASE_URL: postgres://app:app@db:5432/appdb
      PORT: 3001
      # now the single origin is the proxy:
      CORS_ORIGIN: http://localhost:8080
      NODE_ENV: development
    volumes:
      - ./backend:/usr/src/app
    command: ["pnpm","dev"]
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "3001:3001"   # optional to expose directly for debugging

  vite:
      image: node:20-alpine
      working_dir: /app
      command: sh -c "npm i -g pnpm && pnpm install && pnpm run dev -- --host"
      volumes:
        - ./frontend:/app
      environment:
        - CHOKIDAR_USEPOLLING=true
      expose:
        - "5173"   # only inside the docker network
      depends_on:
        api:
          condition: service_started
  proxy:
    image: nginx:1.27-alpine
    volumes:
      - ./ops/nginx/dev.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "8080:80"
    depends_on:
      vite:
        condition: service_started
      api:
        condition: service_started

volumes:
  pgdata:
